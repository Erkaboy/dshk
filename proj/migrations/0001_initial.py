# Generated by Django 2.2.1 on 2020-12-02 06:07

import datetime
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApotOld',
            fields=[
                ('ogc_fid', models.AutoField(primary_key=True, serialize=False)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('mamuriy_hududiy_birliklarni_belgilash_tizimi_kodi', models.CharField(blank=True, max_length=255, null=True)),
                ('aholi_punktining_tipi', models.CharField(blank=True, max_length=255, null=True)),
                ('aholi_punktining_maqomi', models.CharField(blank=True, max_length=255, null=True)),
                ('respublika_viloyat', models.CharField(blank=True, max_length=255, null=True)),
                ('tuman_shahar', models.CharField(blank=True, max_length=255, null=True)),
                ('fuqarolar_yiginlari', models.CharField(blank=True, max_length=255, null=True)),
                ('loyihalash_tashkiloti_shahar_chegarasi_loyihasini_ishlab_chiquv', models.CharField(blank=True, max_length=255, null=True)),
                ('shahar_chegarasi_loyihasi_hujjatlari_saqlandigan_joy', models.CharField(blank=True, max_length=255, null=True)),
                ('shahar_chegarasi_loyihasini_tasdiqlangan_organ', models.CharField(blank=True, max_length=255, null=True)),
                ('shahar_chegarasi_loyiha_tasdiqlash_tugrisidagi_hujjat_raqam_san', models.CharField(blank=True, max_length=255, null=True)),
                ('aholi_punktining_loyihaviy_maydoni_ga', models.CharField(blank=True, max_length=255, null=True)),
                ('aholining_loyihaviy_soni', models.CharField(blank=True, max_length=255, null=True)),
                ('kfi_markazi', models.CharField(blank=True, max_length=255, null=True)),
                ('boysinuvchi_aholi_punktlari_soni', models.CharField(blank=True, max_length=255, null=True)),
                ('ishlab_chiqalgan_yili', models.FloatField(blank=True, null=True)),
                ('ishlab_chiqarish_asosi', models.CharField(blank=True, max_length=255, null=True)),
                ('shaharsozlik_kengashi_qarori', models.CharField(blank=True, max_length=255, null=True)),
                ('chegarani_chizish_turi', models.CharField(blank=True, max_length=255, null=True)),
                ('soato', models.FloatField(blank=True, null=True)),
                ('aholi_soni_tip', models.CharField(blank=True, max_length=255, null=True)),
                ('izoh', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=255, null=True)),
                ('vil_id', models.IntegerField(blank=True, null=True)),
                ('shape_length', models.FloatField(blank=True, null=True)),
                ('shape_area', models.FloatField(blank=True, null=True)),
                ('folder', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'apot_old',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Genplan1601',
            fields=[
                ('objectid', models.AutoField(primary_key=True, serialize=False)),
                ('aholi_punktining_nomi', models.CharField(blank=True, max_length=200, null=True)),
                ('mamuriy_hududiy_birliklarni_belgilash_tizimi_kodi', models.CharField(blank=True, max_length=100, null=True)),
                ('aholi_punktining_tipi', models.CharField(blank=True, max_length=100, null=True)),
                ('aholi_punktining_maqomi', models.CharField(blank=True, max_length=100, null=True)),
                ('respublika_viloyat', models.CharField(blank=True, max_length=100, null=True)),
                ('tuman_shahar', models.CharField(blank=True, max_length=200, null=True)),
                ('loyihalash_tashkiloti_shahar_chegarasi_loyihasini_ishlab_chiquv', models.CharField(blank=True, max_length=200, null=True)),
                ('shahar_chegarasi_loyihasi_hujjatlari_saqlandigan_joy', models.CharField(blank=True, max_length=200, null=True)),
                ('shahar_chegarasi_loyihasini_tasdiqlangan_organ', models.CharField(blank=True, max_length=200, null=True)),
                ('shahar_chegarasi_loyiha_tasdiqlash_tugrisidagi_hujjat_raqam_san', models.CharField(blank=True, max_length=200, null=True)),
                ('aholi_punktining_loyihaviy_maydoni_ga', models.CharField(blank=True, max_length=50, null=True)),
                ('aholining_loyihaviy_soni', models.CharField(blank=True, max_length=50, null=True)),
                ('ishlab_chiqalgan_yili', models.FloatField(blank=True, null=True)),
                ('grafik_malumotlar', models.CharField(blank=True, max_length=250, null=True)),
                ('tshuntirish_hati', models.CharField(blank=True, max_length=250, null=True)),
                ('shape_length', models.FloatField(blank=True, null=True)),
                ('shape_area', models.FloatField(blank=True, null=True)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'genplan_16_01',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeolocationPoint',
            fields=[
                ('ogc_fid', models.AutoField(primary_key=True, serialize=False)),
                ('name_ru', models.CharField(blank=True, max_length=30, null=True)),
                ('name_uz', models.CharField(blank=True, max_length=50, null=True)),
                ('regionname', models.CharField(blank=True, max_length=30, null=True)),
                ('regionnameuz', models.CharField(blank=True, max_length=30, null=True)),
                ('distr_name', models.CharField(blank=True, max_length=80, null=True)),
                ('name_uzb', models.CharField(blank=True, max_length=80, null=True)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'geolocation_point',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeolocationPolygon',
            fields=[
                ('ogc_fid', models.AutoField(primary_key=True, serialize=False)),
                ('distr_name', models.CharField(blank=True, max_length=80, null=True)),
                ('name_uzb', models.CharField(blank=True, max_length=80, null=True)),
                ('id', models.CharField(blank=True, max_length=80, null=True)),
                ('regionname', models.CharField(blank=True, max_length=30, null=True)),
                ('regionnameuz', models.CharField(blank=True, max_length=30, null=True)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'geolocation_polygon',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='adminsApot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=250, verbose_name='Full name')),
                ('email', models.EmailField(blank=True, max_length=250, verbose_name='email')),
                ('contact', models.CharField(blank=True, max_length=250, verbose_name='contact')),
                ('login', models.CharField(default='apot_', max_length=40, verbose_name='login')),
                ('password', models.CharField(max_length=40, verbose_name='parol')),
                ('status', models.CharField(choices=[('1', 'Admin'), ('2', 'Super admin')], max_length=10, verbose_name='status')),
                ('active_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Admin apot',
            },
        ),
        migrations.CreateModel(
            name='adminsFunkApots',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=250, verbose_name='Full name')),
                ('email', models.EmailField(blank=True, max_length=250, verbose_name='email')),
                ('contact', models.CharField(blank=True, max_length=250, verbose_name='contact')),
                ('login', models.CharField(default='fa_', max_length=40, verbose_name='login')),
                ('password', models.CharField(max_length=40, verbose_name='parol')),
                ('status', models.CharField(choices=[('1', 'Admin'), ('2', 'Super admin')], max_length=10, verbose_name='status')),
                ('active_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Admin FunkApots',
            },
        ),
        migrations.CreateModel(
            name='adminsFunkGenplans',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=250, verbose_name='Full name')),
                ('email', models.EmailField(blank=True, max_length=250, verbose_name='email')),
                ('contact', models.CharField(blank=True, max_length=250, verbose_name='contact')),
                ('login', models.CharField(default='fg_', max_length=40, verbose_name='login')),
                ('password', models.CharField(max_length=40, verbose_name='parol')),
                ('status', models.CharField(choices=[('1', 'Admin'), ('2', 'Super admin')], max_length=10, verbose_name='status')),
                ('active_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Admin FunkGenplans',
            },
        ),
        migrations.CreateModel(
            name='adminsGenplan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=250, verbose_name='Full name')),
                ('email', models.EmailField(blank=True, max_length=250, verbose_name='email')),
                ('contact', models.CharField(blank=True, max_length=250, verbose_name='contact')),
                ('login', models.CharField(default='gen_', max_length=40, verbose_name='login')),
                ('password', models.CharField(max_length=40, verbose_name='parol')),
                ('status', models.CharField(choices=[('1', 'Admin'), ('2', 'Super admin')], max_length=10, verbose_name='status')),
                ('active_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Admin genplan',
            },
        ),
        migrations.CreateModel(
            name='adminsGeologRayon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=250, verbose_name='Full name')),
                ('email', models.EmailField(blank=True, max_length=250, verbose_name='email')),
                ('contact', models.CharField(blank=True, max_length=250, verbose_name='contact')),
                ('login', models.CharField(default='gr_', max_length=40, verbose_name='login')),
                ('password', models.CharField(max_length=40, verbose_name='parol')),
                ('status', models.CharField(choices=[('1', 'Admin'), ('2', 'Super admin')], max_length=10, verbose_name='status')),
                ('active_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Admin GeologRayon',
            },
        ),
        migrations.CreateModel(
            name='adminsPdp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=250, verbose_name='Full name')),
                ('email', models.EmailField(blank=True, max_length=250, verbose_name='email')),
                ('contact', models.CharField(blank=True, max_length=250, verbose_name='contact')),
                ('login', models.CharField(default='pdp_', max_length=40, verbose_name='login')),
                ('password', models.CharField(max_length=40, verbose_name='parol')),
                ('status', models.CharField(choices=[('1', 'Admin'), ('2', 'Super admin')], max_length=10, verbose_name='status')),
                ('active_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Admin Pdp',
            },
        ),
        migrations.CreateModel(
            name='adminsRedline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=250, verbose_name='Full name')),
                ('email', models.EmailField(blank=True, max_length=250, verbose_name='email')),
                ('contact', models.CharField(blank=True, max_length=250, verbose_name='contact')),
                ('login', models.CharField(default='rl_', max_length=40, verbose_name='login')),
                ('password', models.CharField(max_length=40, verbose_name='parol')),
                ('status', models.CharField(choices=[('1', 'Admin'), ('2', 'Super admin')], max_length=10, verbose_name='status')),
                ('active_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Admin redline',
            },
        ),
        migrations.CreateModel(
            name='Apots',
            fields=[
                ('objectid', models.AutoField(primary_key=True, serialize=False)),
                ('fuqarolar_yiginlari', models.CharField(blank=True, max_length=255, null=True)),
                ('mamuriy_hududiy_birliklarni_belgilash_tizimi_kodi', models.CharField(blank=True, max_length=255, null=True)),
                ('respublika_viloyat', models.CharField(blank=True, max_length=255, null=True)),
                ('tuman_shahar', models.CharField(blank=True, max_length=255, null=True)),
                ('aholi_punktining_tipi', models.CharField(blank=True, max_length=255, null=True)),
                ('aholi_punktining_maqomi', models.CharField(blank=True, max_length=255, null=True)),
                ('loyihalash_tashkiloti_shahar_chegarasi_loyihasini_ishlab_chiquv', models.CharField(blank=True, max_length=255, null=True)),
                ('shahar_chegarasi_loyihasi_hujjatlari_saqlandigan_joy', models.CharField(blank=True, max_length=255, null=True)),
                ('shahar_chegarasi_loyihasini_tasdiqlangan_organ', models.CharField(blank=True, max_length=255, null=True)),
                ('shahar_chegarasi_loyiha_tasdiqlash_tugrisidagi_hujjat_raqam_san', models.CharField(blank=True, max_length=255, null=True)),
                ('aholi_punktining_loyihaviy_maydoni_ga', models.CharField(blank=True, max_length=255, null=True)),
                ('aholining_loyihaviy_soni', models.CharField(blank=True, max_length=255, null=True)),
                ('ishlab_chiqalgan_yili', models.CharField(blank=True, max_length=255, null=True)),
                ('ishlab_chiqarish_asosi', models.CharField(blank=True, max_length=255, null=True)),
                ('kfi_markazi', models.CharField(blank=True, max_length=255, null=True)),
                ('boysinuvchi_aholi_punktlari_soni', models.CharField(blank=True, max_length=255, null=True)),
                ('shaharsozlik_kengashi_qarori', models.CharField(blank=True, max_length=255, null=True)),
                ('aholi_soni_tip', models.CharField(blank=True, max_length=255, null=True)),
                ('reja_qilingan_hujjat', models.CharField(blank=True, max_length=255, null=True)),
                ('tasdiqlanganligi', models.IntegerField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'verbose_name_plural': 'APOTs',
                'db_table': 'apots',
            },
        ),
        migrations.CreateModel(
            name='Apots_edit',
            fields=[
                ('objectid', models.AutoField(primary_key=True, serialize=False)),
                ('fuqarolar_yiginlari', models.CharField(blank=True, max_length=255, null=True)),
                ('mamuriy_hududiy_birliklarni_belgilash_tizimi_kodi', models.CharField(blank=True, max_length=255, null=True)),
                ('respublika_viloyat', models.CharField(blank=True, max_length=255, null=True)),
                ('tuman_shahar', models.CharField(blank=True, max_length=255, null=True)),
                ('aholi_punktining_tipi', models.CharField(blank=True, max_length=255, null=True)),
                ('aholi_punktining_maqomi', models.CharField(blank=True, max_length=255, null=True)),
                ('loyihalash_tashkiloti_shahar_chegarasi_loyihasini_ishlab_chiquv', models.CharField(blank=True, max_length=255, null=True)),
                ('shahar_chegarasi_loyihasi_hujjatlari_saqlandigan_joy', models.CharField(blank=True, max_length=255, null=True)),
                ('shahar_chegarasi_loyihasini_tasdiqlangan_organ', models.CharField(blank=True, max_length=255, null=True)),
                ('shahar_chegarasi_loyiha_tasdiqlash_tugrisidagi_hujjat_raqam_san', models.CharField(blank=True, max_length=255, null=True)),
                ('aholi_punktining_loyihaviy_maydoni_ga', models.CharField(blank=True, max_length=255, null=True)),
                ('aholining_loyihaviy_soni', models.CharField(blank=True, max_length=255, null=True)),
                ('ishlab_chiqalgan_yili', models.CharField(blank=True, max_length=255, null=True)),
                ('ishlab_chiqarish_asosi', models.CharField(blank=True, max_length=255, null=True)),
                ('kfi_markazi', models.CharField(blank=True, max_length=255, null=True)),
                ('boysinuvchi_aholi_punktlari_soni', models.CharField(blank=True, max_length=255, null=True)),
                ('shaharsozlik_kengashi_qarori', models.CharField(blank=True, max_length=255, null=True)),
                ('aholi_soni_tip', models.CharField(blank=True, max_length=255, null=True)),
                ('reja_qilingan_hujjat', models.CharField(blank=True, max_length=255, null=True)),
                ('tasdiqlanganligi', models.IntegerField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('apot_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='proj.Apots')),
            ],
            options={
                'verbose_name_plural': 'Apots_edit',
                'db_table': 'apots_edit',
            },
        ),
        migrations.CreateModel(
            name='Apz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('our_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='Idintifikarot')),
                ('task_id', models.IntegerField(blank=True, null=True)),
                ('operator_org', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('obj_id', models.IntegerField(blank=True, null=True)),
                ('authority_id', models.IntegerField(blank=True, null=True)),
                ('date', models.DateField(blank=True, default=datetime.datetime.today, verbose_name='Sana')),
                ('user_type_real', models.CharField(blank=True, max_length=600, null=True, verbose_name='Тип пользователя')),
                ('legal_entity_tin', models.CharField(blank=True, max_length=600, null=True, verbose_name='ИНН юридического лица')),
                ('tin', models.CharField(blank=True, max_length=600, null=True, verbose_name='ИНН')),
                ('passport_number', models.CharField(blank=True, max_length=600, null=True, verbose_name='Серия и номер паспорта')),
                ('term_service', models.TextField(blank=True, null=True, verbose_name='Срок получения услуги')),
                ('acception_consideration', models.TextField(blank=True, null=True, verbose_name='Уведомление пользователю')),
                ('reject_reason', models.TextField(max_length=600, null=True, verbose_name='Причина отказа')),
                ('settlement_account', models.TextField(blank=True, null=True, verbose_name='Утвержденный договор')),
                ('name_bank', models.TextField(blank=True, null=True, verbose_name='Наименование обслуживающего банка')),
                ('name_building', models.TextField(blank=True, null=True, verbose_name='Наименование объекта')),
                ('location_building', models.TextField(blank=True, null=True, verbose_name='Месторасположение объекта (индекс, адрес, ориентир)')),
                ('requisites', models.TextField(blank=True, null=True, verbose_name='Реквизиты')),
                ('decision_state_authority', models.TextField(blank=True, null=True, verbose_name='Решение органа государственной власти на местах о предоставлении земельного участка для проектирования и строительства объекта, с приложением плана размещения земельного участка или акта выноса его границ в натуру')),
                ('decision_city_hokim', models.TextField(blank=True, null=True, verbose_name='Решение хокима города (района) о переводе жилых помещений в категорию нежилых')),
                ('permissions_department', models.TextField(blank=True, null=True, verbose_name='Разрешение, соответственно, главного управления строительства г. Ташкента или отдела строительства района (города) на перепрофилирование и реконструкцию объекта.')),
                ('contract_cost', models.TextField(blank=True, null=True, verbose_name='Утвержденный договор и стоимость оплаты сбора')),
                ('apz', models.TextField(blank=True, max_length=600, null=True, verbose_name='АПЗ')),
                ('purpose_construction_real', models.TextField(blank=True, null=True, verbose_name='Цель проекта строительства или реконструкции_real')),
                ('region', models.CharField(blank=True, max_length=600, null=True, verbose_name='Регион')),
                ('district', models.CharField(blank=True, max_length=600, null=True, verbose_name='Район')),
                ('region_real', models.CharField(blank=True, max_length=600, null=True, verbose_name='Регион_real')),
                ('district_real', models.CharField(blank=True, max_length=600, null=True, verbose_name='Район_real')),
                ('file_water', models.TextField(blank=True, null=True, verbose_name='Технические условия (водоснабжения)')),
                ('file_light', models.TextField(blank=True, null=True, verbose_name='Технические условия (электрической энергии)')),
                ('file_gas', models.TextField(blank=True, null=True, verbose_name='Технические условия (газ)')),
                ('authority_light', models.TextField(blank=True, null=True, verbose_name='Региональный ЭСП')),
                ('district_file', models.TextField(blank=True, null=True, verbose_name='district_file')),
                ('region_light', models.TextField(blank=True, null=True, verbose_name='region_light')),
                ('desired_water', models.TextField(blank=True, null=True, verbose_name='Нужной водяной напряжение')),
                ('desired_water_real', models.TextField(blank=True, null=True, verbose_name='Нужной водяной напряжение')),
                ('desired_gas', models.TextField(blank=True, null=True, verbose_name='Нужной газовый напряжение')),
                ('desired_gas_real', models.TextField(blank=True, null=True, verbose_name='Нужной газовый напряжение')),
                ('desired_electrical', models.TextField(blank=True, null=True, verbose_name='Нужной электрический напряжение')),
                ('desired_electrical_real', models.TextField(blank=True, null=True, verbose_name='Нужной электрический напряжение')),
                ('which_geo', models.CharField(blank=True, default='0', max_length=10, null=True, verbose_name='Which Geo')),
            ],
            options={
                'verbose_name': "Arxitektura-rejalashtirish topshirig'i",
                'verbose_name_plural': 'Arxitektura-rejalashtirish topshiriqlari reestri',
            },
        ),
        migrations.CreateModel(
            name='Authority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kod', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Title')),
            ],
            options={
                'verbose_name_plural': 'Bajaruvchi tashkilotlar(my.gov.uz)',
            },
        ),
        migrations.CreateModel(
            name='Buyurtmachi_fiz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, max_length=600, null=True, verbose_name='Ф.И.О')),
                ('tin', models.CharField(blank=True, max_length=600, null=True, verbose_name='ИНН')),
                ('email', models.CharField(blank=True, max_length=600, null=True, verbose_name='Nomi')),
                ('passport_number', models.CharField(blank=True, max_length=600, null=True, verbose_name='Nomi')),
                ('passport_issue_date', models.CharField(blank=True, max_length=600, null=True, verbose_name='Nomi')),
                ('permit_address', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('phone', models.CharField(blank=True, max_length=600, null=True, verbose_name='Nomi')),
                ('birthday', models.CharField(blank=True, max_length=600, null=True, verbose_name='Nomi')),
            ],
            options={
                'verbose_name_plural': 'Buyurtmachi_fiz',
            },
        ),
        migrations.CreateModel(
            name='Buyurtmachi_yur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legal_entity_phone_number', models.CharField(blank=True, max_length=600, null=True, verbose_name='Nomi')),
                ('legal_head_tin', models.CharField(blank=True, max_length=600, null=True, verbose_name='Nomi')),
                ('legal_head_name', models.CharField(blank=True, max_length=600, null=True, verbose_name='Nomi')),
                ('legal_entity_address', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('legal_entity_email', models.CharField(blank=True, max_length=600, null=True, verbose_name='Nomi')),
                ('legal_entity_name', models.CharField(blank=True, max_length=600, null=True, verbose_name='Nomi')),
                ('legal_entity_tin', models.CharField(blank=True, max_length=600, null=True, verbose_name='Nomi')),
            ],
            options={
                'verbose_name_plural': 'Buyurtmachi_yur',
            },
        ),
        migrations.CreateModel(
            name='Crontab_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.CharField(blank=True, max_length=200, null=True, verbose_name='Service')),
                ('date', models.DateField(blank=True, default=datetime.datetime.today, verbose_name='Date')),
            ],
            options={
                'verbose_name_plural': 'Crontab_data',
            },
        ),
        migrations.CreateModel(
            name='FunkApots',
            fields=[
                ('obj_id', models.AutoField(primary_key=True, serialize=False)),
                ('vil_id', models.IntegerField(blank=True, default=0, null=True)),
                ('zonalarning_nomi', models.CharField(blank=True, max_length=200, null=True)),
                ('funktsional_zonalarning_maydoni_ga', models.CharField(blank=True, max_length=50, null=True)),
                ('mavjud_imoratlarning_tavsifi_asosan', models.TextField(blank=True, null=True)),
                ('shaharsozlik_faoliyatining_ruxsat_berilgan_turi', models.TextField(blank=True, null=True)),
                ('shaharsozlik_faoliyatining_taqiqlangan_turi', models.TextField(blank=True, null=True)),
                ('shaharsozlik_faoliyatining_muayyan_shartlarni_bajargan_holda_ru', models.TextField(blank=True, null=True)),
                ('type', models.SmallIntegerField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('apot_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='proj.Apots')),
            ],
            options={
                'verbose_name_plural': "Bosh rejalar bo'yicha funksioan zonalar",
                'db_table': 'funkapots',
            },
        ),
        migrations.CreateModel(
            name='FunkGenplans',
            fields=[
                ('obj_id', models.AutoField(primary_key=True, serialize=False)),
                ('vil_id', models.IntegerField(blank=True, default=0, null=True)),
                ('zonalarning_nomi', models.CharField(blank=True, max_length=200, null=True)),
                ('funktsional_zonalarning_maydoni_ga', models.CharField(blank=True, max_length=50, null=True)),
                ('mavjud_imoratlarning_tavsifi_asosan', models.TextField(blank=True, null=True)),
                ('shaharsozlik_faoliyatining_ruxsat_berilgan_turi', models.TextField(blank=True, null=True)),
                ('shaharsozlik_faoliyatining_taqiqlangan_turi', models.TextField(blank=True, null=True)),
                ('shaharsozlik_faoliyatining_muayyan_shartlarni_bajargan_holda_ru', models.TextField(blank=True, null=True)),
                ('type', models.SmallIntegerField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'verbose_name_plural': "Bosh rejalar bo'yicha funksioan zonalar",
                'db_table': 'funkgenplans',
            },
        ),
        migrations.CreateModel(
            name='FunkZones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(blank=True, default=-1)),
                ('disUz', models.CharField(blank=True, max_length=70, verbose_name='Nomi Uzb')),
                ('disRu', models.CharField(blank=True, max_length=70, verbose_name='Nomi Rus')),
                ('yesGenplan', models.BooleanField(default=False, verbose_name='Genplanda bormi?')),
                ('yesApot', models.BooleanField(default=False, verbose_name='Apotda bormi?')),
                ('color', models.CharField(blank=True, default='', max_length=70, verbose_name='color')),
            ],
            options={
                'verbose_name_plural': 'FunkZones',
            },
        ),
        migrations.CreateModel(
            name='Genplans',
            fields=[
                ('objectid', models.AutoField(primary_key=True, serialize=False)),
                ('aholi_punktining_nomi', models.CharField(blank=True, max_length=255, null=True)),
                ('mamuriy_hududiy_birliklarni_belgilash_tizimi_kodi', models.CharField(blank=True, max_length=255, null=True)),
                ('aholi_punktining_tipi', models.CharField(blank=True, max_length=255, null=True)),
                ('aholi_punktining_maqomi', models.CharField(blank=True, max_length=255, null=True)),
                ('respublika_viloyat', models.CharField(blank=True, max_length=255, null=True)),
                ('tuman_shahar', models.CharField(blank=True, max_length=255, null=True)),
                ('loyihalash_tashkiloti_shahar_chegarasi_loyihasini_ishlab_chiquv', models.CharField(blank=True, max_length=255, null=True)),
                ('shahar_chegarasi_loyihasi_hujjatlari_saqlandigan_joy', models.CharField(blank=True, max_length=255, null=True)),
                ('shahar_chegarasi_loyihasini_tasdiqlangan_organ', models.CharField(blank=True, max_length=255, null=True)),
                ('shahar_chegarasi_loyiha_tasdiqlash_tugrisidagi_hujjat_raqam_san', models.CharField(blank=True, max_length=255, null=True)),
                ('aholi_punktining_loyihaviy_maydoni_ga', models.CharField(blank=True, max_length=255, null=True)),
                ('aholining_loyihaviy_soni', models.CharField(blank=True, max_length=255, null=True)),
                ('ishlab_chiqalgan_yili', models.CharField(blank=True, max_length=255, null=True)),
                ('tasdiqlanganligi', models.IntegerField(blank=True, null=True)),
                ('reja_qilingan_hujjat', models.CharField(blank=True, max_length=255, null=True)),
                ('qizil_chiziq', models.IntegerField(blank=True, default=0, null=True)),
                ('funk_zone', models.IntegerField(blank=True, default=0, null=True)),
                ('grafik_malumot', models.FileField(default='', upload_to='genplan_data/main_data/')),
                ('izohlovchi_malumot', models.FileField(default='', upload_to='genplan_data/main_data/')),
                ('id', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'verbose_name_plural': 'Genplans',
                'db_table': 'genplan',
            },
        ),
        migrations.CreateModel(
            name='Genplans_edit',
            fields=[
                ('objectid', models.AutoField(primary_key=True, serialize=False)),
                ('aholi_punktining_nomi', models.CharField(blank=True, max_length=255, null=True)),
                ('mamuriy_hududiy_birliklarni_belgilash_tizimi_kodi', models.CharField(blank=True, max_length=255, null=True)),
                ('aholi_punktining_tipi', models.CharField(blank=True, max_length=255, null=True)),
                ('aholi_punktining_maqomi', models.CharField(blank=True, max_length=255, null=True)),
                ('respublika_viloyat', models.CharField(blank=True, max_length=255, null=True)),
                ('tuman_shahar', models.CharField(blank=True, max_length=255, null=True)),
                ('loyihalash_tashkiloti_shahar_chegarasi_loyihasini_ishlab_chiquv', models.CharField(blank=True, max_length=255, null=True)),
                ('shahar_chegarasi_loyihasi_hujjatlari_saqlandigan_joy', models.CharField(blank=True, max_length=255, null=True)),
                ('shahar_chegarasi_loyihasini_tasdiqlangan_organ', models.CharField(blank=True, max_length=255, null=True)),
                ('shahar_chegarasi_loyiha_tasdiqlash_tugrisidagi_hujjat_raqam_san', models.CharField(blank=True, max_length=255, null=True)),
                ('aholi_punktining_loyihaviy_maydoni_ga', models.CharField(blank=True, max_length=255, null=True)),
                ('aholining_loyihaviy_soni', models.CharField(blank=True, max_length=255, null=True)),
                ('ishlab_chiqalgan_yili', models.CharField(blank=True, max_length=255, null=True)),
                ('grafik_malumot', models.FileField(default='', upload_to='genplan_data/main_data/')),
                ('izohlovchi_malumot', models.FileField(default='', upload_to='genplan_data/main_data/')),
                ('tasdiqlanganligi', models.IntegerField(blank=True, null=True)),
                ('reja_qilingan_hujjat', models.CharField(blank=True, max_length=255, null=True)),
                ('id', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('admin_id', models.IntegerField(blank=True, default=0, null=True)),
                ('send_sdmin', models.IntegerField(blank=True, default=0, null=True)),
                ('event_id', models.IntegerField(blank=True, default=-1, null=True)),
                ('genplan_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='proj.Genplans')),
            ],
            options={
                'verbose_name_plural': 'Genplans_edit',
                'db_table': 'genplan_edit',
            },
        ),
        migrations.CreateModel(
            name='genplansEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genplan_id', models.CharField(max_length=255)),
                ('admin_id', models.IntegerField(blank=True, null=True)),
                ('event_type', models.IntegerField(blank=True, null=True)),
                ('object_box', models.TextField(blank=True, null=True)),
                ('event_dis', models.TextField(blank=True, null=True)),
                ('event_date', models.DateTimeField(blank=True, null=True)),
                ('superadmin_id', models.IntegerField(blank=True, null=True)),
                ('event_ans_type', models.IntegerField(blank=True, null=True)),
                ('event_ans_dis', models.TextField(blank=True, null=True)),
                ('event_ans_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'genplansEvent',
            },
        ),
        migrations.CreateModel(
            name='GeologRayon',
            fields=[
                ('ojb_id', models.AutoField(primary_key=True, serialize=False)),
                ('vil_id', models.IntegerField(blank=True, default=0, null=True)),
                ('injenerlik_geologik_viloyat_indeksi', models.CharField(blank=True, max_length=255, null=True)),
                ('injenerlik_geologik_viloyat_tavsifi', models.TextField(blank=True, null=True)),
                ('injenerlik_geologik_hududlar_indeksi', models.CharField(blank=True, max_length=255, null=True)),
                ('injenerlik_geologik_hududlar_tavsifi', models.TextField(blank=True, null=True)),
                ('injenerlik_geologik_kichik_hududlar_indeksi', models.CharField(blank=True, max_length=255, null=True)),
                ('injenerlik_geologik_kichik_hududlar_tavsifi', models.TextField(blank=True, null=True)),
                ('injenerlik_geologik_uchastkalar_indeksi', models.CharField(blank=True, max_length=255, null=True)),
                ('injenerlik_geologik_uchastkalar_tavsifi', models.TextField(blank=True, null=True)),
                ('hududlarning_geologik_genetik_tavsifi', models.TextField(blank=True, null=True)),
                ('hududdagi_geodinamik_jarayonlar', models.TextField(blank=True, null=True)),
                ('tavsiya_etiladigan_injenerlik_tadbirlari', models.TextField(blank=True, null=True)),
                ('gruntlarning_seysmik_xususiyatlari_buyicha_toifasi', models.CharField(blank=True, max_length=255, null=True)),
                ('kod', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('id', models.CharField(blank=True, max_length=100, null=True)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'verbose_name_plural': 'Geologik rayonlashtirish polygon',
                'db_table': 'geolograyon',
            },
        ),
        migrations.CreateModel(
            name='GeologRayon_data',
            fields=[
                ('ojb_id', models.AutoField(primary_key=True, serialize=False)),
                ('obyekt_nomi', models.CharField(blank=True, max_length=350, null=True)),
                ('bajaruvchi_tashkilot', models.CharField(blank=True, max_length=255, null=True)),
                ('bajaruvchi_shaxs', models.CharField(blank=True, max_length=255, null=True)),
                ('buyurtmachi', models.CharField(blank=True, max_length=255, null=True)),
                ('inv_nomer', models.CharField(blank=True, max_length=255, null=True)),
                ('grif', models.CharField(blank=True, max_length=100, null=True)),
                ('koordinatalar_tizimi', models.CharField(blank=True, max_length=255, null=True)),
                ('masshtab', models.CharField(blank=True, max_length=255, null=True)),
                ('ish_boshlangan_vaqt', models.CharField(blank=True, max_length=255, null=True)),
                ('ish_yakunlangan_vaqt', models.CharField(blank=True, max_length=255, null=True)),
                ('ish_bajarilgan_davr', models.CharField(blank=True, max_length=255, null=True)),
                ('maydoni_ga', models.CharField(blank=True, max_length=255, null=True)),
                ('shartnoma_n', models.CharField(blank=True, max_length=255, null=True)),
                ('shartnoma_nomi', models.CharField(blank=True, max_length=255, null=True)),
                ('vil_id', models.IntegerField(blank=True, default=0, null=True)),
                ('tuman', models.CharField(blank=True, max_length=255, null=True)),
                ('joy_nomi', models.CharField(blank=True, max_length=255, null=True)),
                ('izoh', models.TextField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=100, null=True)),
                ('soato', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('hisobot', models.FileField(blank=True, default='', upload_to='geologik_rayon/hisobot/')),
                ('grafik', models.FileField(blank=True, default='', upload_to='geologik_rayon/grafik/')),
            ],
            options={
                'verbose_name_plural': 'Geologik rayonlashtirish data',
                'db_table': 'geolograyon_data',
            },
        ),
        migrations.CreateModel(
            name='GeologRayon_data_edit',
            fields=[
                ('ojb_id', models.AutoField(primary_key=True, serialize=False)),
                ('obyekt_nomi', models.CharField(blank=True, max_length=350, null=True)),
                ('bajaruvchi_tashkilot', models.CharField(blank=True, max_length=255, null=True)),
                ('bajaruvchi_shaxs', models.CharField(blank=True, max_length=255, null=True)),
                ('buyurtmachi', models.CharField(blank=True, max_length=255, null=True)),
                ('inv_nomer', models.CharField(blank=True, max_length=255, null=True)),
                ('grif', models.CharField(blank=True, max_length=100, null=True)),
                ('koordinatalar_tizimi', models.CharField(blank=True, max_length=255, null=True)),
                ('masshtab', models.CharField(blank=True, max_length=255, null=True)),
                ('ish_boshlangan_vaqt', models.CharField(blank=True, max_length=255, null=True)),
                ('ish_yakunlangan_vaqt', models.CharField(blank=True, max_length=255, null=True)),
                ('ish_bajarilgan_davr', models.CharField(blank=True, max_length=255, null=True)),
                ('maydoni_ga', models.CharField(blank=True, max_length=255, null=True)),
                ('shartnoma_n', models.CharField(blank=True, max_length=255, null=True)),
                ('shartnoma_nomi', models.CharField(blank=True, max_length=255, null=True)),
                ('vil_id', models.IntegerField(blank=True, default=0, null=True)),
                ('tuman', models.CharField(blank=True, max_length=255, null=True)),
                ('joy_nomi', models.CharField(blank=True, max_length=255, null=True)),
                ('izoh', models.TextField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=100, null=True)),
                ('soato', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('hisobot', models.FileField(blank=True, default='', upload_to='geologik_rayon/hisobot/')),
                ('grafik', models.FileField(blank=True, default='', upload_to='geologik_rayon/grafik/')),
                ('geolograyon_data_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='proj.GeologRayon_data')),
            ],
            options={
                'verbose_name_plural': 'Geologik rayonlashtirish data',
                'db_table': 'geolograyon_data_edit',
            },
        ),
        migrations.CreateModel(
            name='Location_obj',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geoPoint', django.contrib.gis.db.models.fields.MultiPointField(blank=True, null=True, srid=4326, verbose_name="Point qo'yish")),
                ('geoPolygon', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326, verbose_name='Polygon chizish')),
                ('our_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='our_id')),
                ('kadastr_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='kadastr_id')),
                ('adress', models.TextField(blank=True, null=True, verbose_name='Manzil')),
                ('apz', models.CharField(blank=True, max_length=200, null=True, verbose_name='apz')),
                ('psd', models.CharField(blank=True, max_length=200, null=True, verbose_name='psd')),
                ('psd_ind', models.CharField(blank=True, max_length=200, null=True, verbose_name='psd_ind')),
                ('perm_rec', models.CharField(blank=True, max_length=200, null=True, verbose_name='perm_rec')),
                ('smr', models.CharField(blank=True, max_length=200, null=True, verbose_name='smr')),
                ('pexpl', models.CharField(blank=True, max_length=200, null=True, verbose_name='pexpl')),
                ('pexpl_ind', models.CharField(blank=True, max_length=200, null=True, verbose_name='pexpl_ind')),
                ('which_geo', models.CharField(choices=[('0', 'Null'), ('1', 'Point'), ('2', 'Polygon'), ('3', 'Point and Polygon')], default='0', max_length=10, verbose_name='Which Geo')),
            ],
            options={
                'verbose_name': "Ob'yekt",
                'verbose_name_plural': "Ob'yektlarni xaritada belgilash",
            },
        ),
        migrations.CreateModel(
            name='Loyihalovchi',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nomi', models.TextField(blank=True, null=True)),
                ('txtash', models.CharField(blank=True, max_length=255)),
                ('inn', models.CharField(blank=True, max_length=600)),
                ('adress', models.TextField(blank=True, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('raxbar', models.CharField(blank=True, max_length=255)),
                ('contact', models.TextField(blank=True)),
                ('ifut', models.CharField(blank=True, max_length=70)),
                ('ifut_kodi', models.CharField(blank=True, max_length=30)),
                ('litsenziya', models.CharField(blank=True, max_length=255)),
                ('litsenziya_sana', models.DateField(blank=True, null=True)),
                ('litsenziya_muddat', models.CharField(blank=True, max_length=255, null=True)),
                ('litsenziya_ft', models.CharField(blank=True, max_length=200)),
                ('litsenziya_kshr', models.CharField(blank=True, max_length=200)),
                ('litsenziya_kshr_sana', models.DateField(blank=True, null=True)),
                ('litsenziyalangan_ishlar', models.CharField(blank=True, max_length=255)),
                ('litsenziya_qro', models.CharField(blank=True, max_length=255)),
                ('mulk_shakli', models.CharField(blank=True, max_length=200)),
                ('viloyat', models.CharField(blank=True, max_length=200)),
                ('tuman', models.CharField(blank=True, max_length=200)),
                ('ap', models.CharField(blank=True, max_length=200)),
                ('reestr_raqami', models.CharField(blank=True, max_length=200)),
                ('litsenziya_2', models.CharField(blank=True, max_length=255)),
                ('litsenziya_muddat_2', models.CharField(blank=True, max_length=255)),
                ('ashxkb', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Loyihalovchi tashkilotlar',
            },
        ),
        migrations.CreateModel(
            name='Pdps',
            fields=[
                ('objectid', models.AutoField(primary_key=True, serialize=False)),
                ('aholi_punktining_nomi', models.CharField(blank=True, max_length=255, null=True)),
                ('mamuriy_hududiy_birliklarni_belgilash_tizimi_kodi', models.CharField(blank=True, max_length=255, null=True)),
                ('aholi_punktining_tipi', models.CharField(blank=True, max_length=255, null=True)),
                ('aholi_punktining_maqomi', models.CharField(blank=True, max_length=255, null=True)),
                ('respublika_viloyat', models.CharField(blank=True, max_length=255, null=True)),
                ('tuman_shahar', models.CharField(blank=True, max_length=255, null=True)),
                ('loyihalash_tashkiloti_shahar_chegarasi_loyihasini_ishlab_chiquv', models.CharField(blank=True, max_length=255, null=True)),
                ('shahar_chegarasi_loyihasi_hujjatlari_saqlandigan_joy', models.CharField(blank=True, max_length=255, null=True)),
                ('shahar_chegarasi_loyihasini_tasdiqlangan_organ', models.CharField(blank=True, max_length=255, null=True)),
                ('shahar_chegarasi_loyiha_tasdiqlash_tugrisidagi_hujjat_raqam_san', models.CharField(blank=True, max_length=255, null=True)),
                ('aholi_punktining_loyihaviy_maydoni_ga', models.CharField(blank=True, max_length=255, null=True)),
                ('aholining_loyihaviy_soni', models.CharField(blank=True, max_length=255, null=True)),
                ('ishlab_chiqalgan_yili', models.CharField(blank=True, max_length=255, null=True)),
                ('tasdiqlanganligi', models.IntegerField(blank=True, null=True)),
                ('reja_qilingan_hujjat', models.CharField(blank=True, max_length=255, null=True)),
                ('grafik_malumot', models.FileField(default='', upload_to='pdp_data/main_data/')),
                ('izohlovchi_malumot', models.FileField(default='', upload_to='pdp_data/main_data/')),
                ('id', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'verbose_name_plural': 'Pdps',
                'db_table': 'pdp',
            },
        ),
        migrations.CreateModel(
            name='Pdps_edit',
            fields=[
                ('objectid', models.AutoField(primary_key=True, serialize=False)),
                ('aholi_punktining_nomi', models.CharField(blank=True, max_length=255, null=True)),
                ('mamuriy_hududiy_birliklarni_belgilash_tizimi_kodi', models.CharField(blank=True, max_length=255, null=True)),
                ('aholi_punktining_tipi', models.CharField(blank=True, max_length=255, null=True)),
                ('aholi_punktining_maqomi', models.CharField(blank=True, max_length=255, null=True)),
                ('respublika_viloyat', models.CharField(blank=True, max_length=255, null=True)),
                ('tuman_shahar', models.CharField(blank=True, max_length=255, null=True)),
                ('loyihalash_tashkiloti_shahar_chegarasi_loyihasini_ishlab_chiquv', models.CharField(blank=True, max_length=255, null=True)),
                ('shahar_chegarasi_loyihasi_hujjatlari_saqlandigan_joy', models.CharField(blank=True, max_length=255, null=True)),
                ('shahar_chegarasi_loyihasini_tasdiqlangan_organ', models.CharField(blank=True, max_length=255, null=True)),
                ('shahar_chegarasi_loyiha_tasdiqlash_tugrisidagi_hujjat_raqam_san', models.CharField(blank=True, max_length=255, null=True)),
                ('aholi_punktining_loyihaviy_maydoni_ga', models.CharField(blank=True, max_length=255, null=True)),
                ('aholining_loyihaviy_soni', models.CharField(blank=True, max_length=255, null=True)),
                ('ishlab_chiqalgan_yili', models.CharField(blank=True, max_length=255, null=True)),
                ('tasdiqlanganligi', models.IntegerField(blank=True, null=True)),
                ('reja_qilingan_hujjat', models.CharField(blank=True, max_length=255, null=True)),
                ('grafik_malumot', models.FileField(default='', upload_to='pdp_data/main_data/')),
                ('izohlovchi_malumot', models.FileField(default='', upload_to='pdp_data/main_data/')),
                ('id', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('pdp_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='proj.Pdps')),
            ],
            options={
                'verbose_name_plural': 'Pdps_edit',
                'db_table': 'pdp_edit',
            },
        ),
        migrations.CreateModel(
            name='Perm_rec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('our_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='Idintifikarot')),
                ('task_id', models.IntegerField(blank=True, null=True)),
                ('operator_org', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('obj_id', models.IntegerField(blank=True, null=True)),
                ('authority_id', models.IntegerField(blank=True, null=True)),
                ('date', models.DateField(blank=True, default=datetime.datetime.today, verbose_name='Sana')),
                ('term_service', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('user_type_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('legal_entity_tin', models.TextField(blank=True, null=True, verbose_name='ИНН юридического лица')),
                ('passport_number', models.TextField(blank=True, null=True, verbose_name='Серия и номер паспорта')),
                ('tin', models.TextField(blank=True, null=True, verbose_name='ИНН')),
                ('number_cadastral_case', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('date_cadastral_case', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('type_activity_in', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('type_activity_in_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('settlement_account', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('name_bank', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('type_activity', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('name_building', models.TextField(blank=True, null=True, verbose_name='Наименование здания и сооружения')),
                ('building_location', models.TextField(blank=True, null=True, verbose_name='Месторасположение здания и сооружения (индекс, адрес, ориентир)')),
                ('main_content_reprofiling', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('eds', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('user_notification', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('reason_refusual', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('permission_reg_number', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('permission_reg_date', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('additional_special_conditions', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('object_area', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('select_region', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('eds_gos_cad', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('legal_eds', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('acceptance', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('reject_file', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('district', models.TextField(blank=True, null=True, verbose_name='Район')),
                ('district_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('responsible_person_arch', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('responsible_person_cadastr', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('scanfile', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('payment', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('department_architecture', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('authorized_position', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('fio_authorized_person', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('permission_type', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('permission_type_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('location_building_structure_gos', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('legal_name_fio_ind_gos', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('notice', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('which_geo', models.CharField(blank=True, default='0', max_length=10, null=True, verbose_name='Which Geo')),
            ],
            options={
                'verbose_name': 'Ixtisoslashtirish va rekonstruktsiya qilish',
                'verbose_name_plural': 'Obyektni qayta ixtisoslashtirish va rekonstruktsiya qilish reestri',
            },
        ),
        migrations.CreateModel(
            name='Pexpl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('our_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='Idintifikarot')),
                ('task_id', models.IntegerField(blank=True, null=True)),
                ('operator_org', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('obj_id', models.IntegerField(blank=True, null=True)),
                ('authority_id', models.IntegerField(blank=True, null=True)),
                ('date', models.DateField(blank=True, default=datetime.datetime.today, verbose_name='Sana')),
                ('district_id', models.TextField(blank=True, null=True, verbose_name='Район (город)')),
                ('district_id_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('region_id', models.TextField(blank=True, null=True, verbose_name='Регион')),
                ('region_id_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('type_building_structure', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('type_building_structure_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('user_ds_gov', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('responsible_person_rejected', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('responsible_person', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('contract_file', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('reject_reason', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('acception_consideration', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('tin_contractor_org', models.TextField(blank=True, null=True, verbose_name='ИНН подрядной организации (при наличии)')),
                ('tin_project_org', models.TextField(blank=True, null=True, verbose_name='ИНН проектной организации  ')),
                ('number_date_resignation_district_hokim', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('buildings_location', models.TextField(blank=True, null=True, verbose_name='Месторасположение здания и сооружения (индекс, адрес, ориентир)')),
                ('buildings_name', models.TextField(blank=True, null=True, verbose_name='Наименование здания и сооружения')),
                ('user_ds', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('kopf', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('kopf_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('tin', models.TextField(blank=True, null=True, verbose_name='ИНН ')),
                ('passport_number', models.TextField(blank=True, null=True, verbose_name='Серия и номер паспорта')),
                ('user_type_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('legal_entity_tin', models.TextField(blank=True, null=True, verbose_name='ИНН юридического лица')),
                ('user_ds_gov_architectura', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('user_ds_gov_gasn', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('user_ds_gov_sanitation', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('user_ds_gov_firefighters', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('doc_architectura', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('doc_gasn', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('doc_sanitation', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('doc_firefighters', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('act_doc', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('name_owner_real_estate', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('inn_owner_real_estate', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('property_location', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('cadastral_number', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('plot_area_according_legal_document', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('legal_documents_real_estate', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('basic_documentation_construction', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('name_building_according_project_documentation', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('number_main_buildingsaa', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('number_additional_buildingsas', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('total_areaad', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('living_areaaf', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('number_living_roomsag', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('info_about_floors_reconstructed_buildingsh', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('number_main_buildingssa', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('number_additional_buildingsss', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('total_areasd', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('living_areasf', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('number_living_roomssg', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('following_engineering_networks_connected_livingsj', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('date_beginning_constructionsk', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('date_completion_constructionsl', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('end_construction_work_building_percentsz', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('end_construction_work_building_percentsz_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('legal_documents_land_plot', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('legal_documents_building', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('number_constructionsad', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('cadastral_amountaf', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('effective_areaah', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('volume_buildingaj', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('info_about_floors_reconstructedak', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('number_buildingsa', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('number_parts_buildingsss', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('number_structuressd', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('usable_areasg', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('volume_buildingsh', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('following_engineering_networks_connected_buildingsk', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('info_about_floors_reconstructed_buildingaj', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('number_parts_buildingsaa', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('number_buildingsaab', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('registration_number_act', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('registration_act_date', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('city_area', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('name_organizer', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('name_executing_organization', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('head_construction_department', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('name_department_construction', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('name_head_cadastre_branch', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('name_branch_cadastre', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('conclusion_act', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('meet_requirements_standards', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('meet_requirements_standards_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('authorized_person_sanitary', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('doctor_sanitary_epidemiological', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('post_authorized_person_gasn', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('head_inspections_architectural_supervision', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('authorized_person_fireman', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('head_fire_safety_department', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('authorized_person_architecture', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('head_district_construction_department', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('meet_requirements_standardsss', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('meet_requirements_standardsss_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('meet_requirements_standardsbb', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('meet_requirements_standardsbb_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('meet_requirements_standardsaa', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('meet_requirements_standardsaa_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('after_acceptance_building_objects_which_construction_reconstruc', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('info_buildings_facilities_accepted_operation', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('user_ds_gov_reject', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('name_head_cadastre_branch_reject', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('name_branch_cadastre_reject', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('conclusion_act_reject', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('cause_ss', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('cause_bb', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('cause_aa', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('cause', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('extract_register_real_estate', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('volume_building_structure', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('death_certificate', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('death_owner_check', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('which_geo', models.CharField(blank=True, default='0', max_length=10, null=True, verbose_name='Which Geo')),
            ],
            options={
                'verbose_name': 'Bino va inshootni foydalanishga qabul qilish',
                'verbose_name_plural': 'Turar joy obyekti hisoblangan bino va inshootni foydalanishga qabul qilishi reestri',
            },
        ),
        migrations.CreateModel(
            name='Pexpl_ind',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('our_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='Idintifikarot')),
                ('task_id', models.IntegerField(blank=True, null=True)),
                ('operator_org', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('obj_id', models.IntegerField(blank=True, null=True)),
                ('authority_id', models.IntegerField(blank=True, null=True)),
                ('date', models.DateField(blank=True, default=datetime.datetime.today, verbose_name='Sana')),
                ('district_id', models.TextField(blank=True, null=True, verbose_name='Район (город)')),
                ('district_id_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('region_id', models.TextField(blank=True, null=True, verbose_name='Регион')),
                ('region_id_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('type_building_structure', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('type_building_structure_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('user_ds_gov', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('responsible_person_rejected', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('responsible_person', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('contract_file', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('reject_reason', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('acception_consideration', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('tin_contractor_org', models.TextField(blank=True, null=True, verbose_name='ИНН подрядной организации (при наличии)')),
                ('tin_project_org', models.TextField(blank=True, null=True, verbose_name='ИНН проектной организации ')),
                ('number_date_resignation_district_hokim', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('buildings_location', models.TextField(blank=True, null=True, verbose_name='#Месторасположение здания и сооружения (индекс, адрес, ориентир)')),
                ('buildings_name', models.TextField(blank=True, null=True, verbose_name='Наименование здания и сооружения  ')),
                ('user_ds', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('kopf', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('kopf_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('tin', models.TextField(blank=True, null=True, verbose_name='ИНН')),
                ('passport_number', models.TextField(blank=True, null=True, verbose_name='Серия и номер паспорта')),
                ('user_type_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('legal_entity_tin', models.TextField(blank=True, null=True, verbose_name='ИНН юридического лица')),
                ('user_ds_gov_architectura', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('user_ds_gov_gasn', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('user_ds_gov_sanitation', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('user_ds_gov_firefighters', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('doc_architectura', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('doc_gasn', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('doc_sanitation', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('doc_firefighters', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('act_doc', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('name_owner_real_estate', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('inn_owner_real_estate', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('property_location', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('cadastral_number', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('plot_area_according_legal_document', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('legal_documents_real_estate', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('basic_documentation_construction', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('name_building_according_project_documentation', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('number_main_buildingsaa', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('number_additional_buildingsas', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('total_areaad', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('living_areaaf', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('number_living_roomsag', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('info_about_floors_reconstructed_buildingsh', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('number_main_buildingssa', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('number_additional_buildingsss', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('total_areasd', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('living_areasf', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('number_living_roomssg', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('following_engineering_networks_connected_livingsj', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('date_beginning_constructionsk', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('date_completion_constructionsl', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('end_construction_work_building_percentsz', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('end_construction_work_building_percentsz_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('legal_documents_land_plot', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('legal_documents_building', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('number_constructionsad', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('cadastral_amountaf', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('effective_areaah', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('volume_buildingaj', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('info_about_floors_reconstructedak', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('number_buildingsa', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('number_parts_buildingsss', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('number_structuressd', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('usable_areasg', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('volume_buildingsh', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('following_engineering_networks_connected_buildingsk', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('info_about_floors_reconstructed_buildingaj', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('number_parts_buildingsaa', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('number_buildingsaab', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('registration_number_act', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('registration_act_date', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('head_construction_department', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('name_department_construction', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('name_head_cadastre_branch', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('name_branch_cadastre', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('conclusion_act', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('meet_requirements_standards', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('meet_requirements_standards_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('authorized_person_sanitary', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('doctor_sanitary_epidemiological', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('post_authorized_person_gasn', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('head_inspections_architectural_supervision', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('authorized_person_fireman', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('head_fire_safety_department', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('authorized_person_architecture', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('head_district_construction_department', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('meet_requirements_standardsss', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('meet_requirements_standardsss_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('meet_requirements_standardsbb', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('meet_requirements_standardsbb_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('meet_requirements_standardsaa', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('meet_requirements_standardsaa_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('after_acceptance_building_objects_which_construction_reconstruc', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('info_buildings_facilities_accepted_operation', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('user_ds_gov_reject', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('name_head_cadastre_branch_reject', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('name_branch_cadastre_reject', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('conclusion_act_reject', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('cause_ss', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('cause_bb', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('cause_aa', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('cause', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('extract_register_real_estate', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('volume_building_structure', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('death_certificate', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('death_owner_check', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('which_geo', models.CharField(blank=True, default='0', max_length=10, null=True, verbose_name='Which Geo')),
            ],
            options={
                'verbose_name': 'Noturar bino va inshootni foydalanishga qabul qilish',
                'verbose_name_plural': 'Noturar joy obyekti hisoblangan bino va inshootni foydalanishga qabul qilish reestri',
            },
        ),
        migrations.CreateModel(
            name='Psd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('our_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='Idintifikarot')),
                ('task_id', models.IntegerField(blank=True, null=True)),
                ('operator_org', models.CharField(blank=True, max_length=600, null=True, verbose_name='operator')),
                ('obj_id', models.IntegerField(blank=True, null=True)),
                ('authority_id', models.IntegerField(blank=True, null=True)),
                ('situation_plan_location_obj', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('general_plan_buildings_struct_other_obj', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('facades_main_side', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('requisites_architectural_planning_assignment', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('tin_project_org', models.TextField(blank=True, null=True, verbose_name='ИНН проектной организации')),
                ('name_design_estimates', models.TextField(blank=True, null=True, verbose_name='Наименование проектно-сметной документации')),
                ('user_ds', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('doc_architectura', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('region_id', models.TextField(blank=True, null=True, verbose_name='Регион')),
                ('region_id_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('user_ds_gov', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('responsible_person_rejected', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('responsible_person', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('reject_reason', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('acception_consideration', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('user_type_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('legal_entity_tin', models.TextField(blank=True, null=True, verbose_name='ИНН юридического лица')),
                ('individual_tin', models.TextField(blank=True, null=True, verbose_name='ИНН')),
                ('passport_number', models.CharField(blank=True, max_length=600, null=True, verbose_name='Серия и номер паспорта')),
                ('district_id', models.TextField(blank=True, null=True, verbose_name='Район')),
                ('district_id_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('file_main', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('date', models.DateField(blank=True, default=datetime.datetime.today, verbose_name='Sana')),
                ('which_geo', models.CharField(blank=True, default='0', max_length=10, null=True, verbose_name='Which Geo')),
            ],
            options={
                'verbose_name': 'Loyiha-smeta hujjati',
                'verbose_name_plural': 'Binolar, inshootlar va boshqa obyektlar qurilishining loyiha-smeta hujjatlari reestri',
            },
        ),
        migrations.CreateModel(
            name='Psd_ind',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('our_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='Idintifikarot')),
                ('task_id', models.IntegerField(blank=True, null=True)),
                ('operator_org', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('obj_id', models.IntegerField(blank=True, null=True)),
                ('authority_id', models.IntegerField(blank=True, null=True)),
                ('financial_calculation', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('ownership_documents', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('technical_conclusion', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('passport_number', models.TextField(blank=True, null=True, verbose_name='Серия и номер паспорта')),
                ('tin', models.TextField(blank=True, null=True, verbose_name='ИНН')),
                ('number_certificate_land', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('date_certificate_land', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('object_name', models.TextField(blank=True, null=True, verbose_name='Наименование объекта')),
                ('object_adress', models.TextField(blank=True, null=True, verbose_name='Месторасположение объекта (индекс, адрес, ориентир)')),
                ('plan_land_plot', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('foundation_plan', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('construction_apartment', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('house_reconstruction', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('treatment_purpose', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('term_of_service', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('department_architecture', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('eds', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('user_notification', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('reject_reason', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('upload_file_ijs', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('eds_gosorgan', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('user_type_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('region', models.TextField(blank=True, null=True, verbose_name='Регион')),
                ('region_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('district', models.TextField(blank=True, null=True, verbose_name='Район')),
                ('district_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('design_estimate', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('date', models.DateField(blank=True, default=datetime.datetime.today, verbose_name='Sana')),
                ('which_geo', models.CharField(blank=True, default='0', max_length=10, null=True, verbose_name='Which Geo')),
            ],
            options={
                'verbose_name': 'Loyiha-smeta hujjati',
                'verbose_name_plural': 'Yakka tartibda uy-joy qurishga (rekonstruktsiya qilishga) loyiha-smeta hujjatlari reestri',
            },
        ),
        migrations.CreateModel(
            name='Quruvchi',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nomi', models.TextField(blank=True, null=True)),
                ('txtash', models.CharField(blank=True, max_length=255)),
                ('inn', models.CharField(blank=True, max_length=600)),
                ('adress', models.TextField(blank=True, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('raxbar', models.CharField(blank=True, max_length=255)),
                ('contact', models.TextField(blank=True)),
                ('mulk_shakli', models.CharField(blank=True, max_length=200)),
                ('viloyat', models.CharField(blank=True, max_length=200)),
                ('tuman', models.CharField(blank=True, max_length=200)),
                ('ap', models.CharField(blank=True, max_length=200)),
                ('reestr_raqami', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Pudratchi tashkilotlar',
            },
        ),
        migrations.CreateModel(
            name='Redlines',
            fields=[
                ('obj_id', models.AutoField(primary_key=True, serialize=False)),
                ('vil_id', models.IntegerField(blank=True, default=0, null=True)),
                ('nomi', models.CharField(blank=True, max_length=255, null=True)),
                ('id', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
                ('genplan_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='proj.Genplans')),
            ],
            options={
                'verbose_name_plural': 'Qizil chiziqlar',
                'db_table': 'redlines',
            },
        ),
        migrations.CreateModel(
            name='Smr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('our_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='Idintifikarot')),
                ('task_id', models.IntegerField(blank=True, null=True)),
                ('operator_org', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('obj_id', models.IntegerField(blank=True, null=True)),
                ('authority_id', models.IntegerField(blank=True, null=True)),
                ('date', models.DateField(blank=True, default=datetime.datetime.today, verbose_name='Sana')),
                ('number_date_protocol', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('formed_publicoff', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('reject_reason', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('notice', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('parallel_designobjc', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('numdate_protocol', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('cost', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('construction_works', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('amount_apartments', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('amount_houses', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('total_livingarea', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('total_area', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('attic_mansard', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('basement_techunderground', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('construction_volume', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('floors', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('info_supervisory', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('eds', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('district_id', models.TextField(blank=True, null=True, verbose_name='Район (город)')),
                ('district_id_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('region_id', models.TextField(blank=True, null=True, verbose_name='Регион')),
                ('region_id_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('nmdate_posconc', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('nmdate_licontr', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('nmdate_posopin', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('name_expertise', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('settlement_account', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('location_building', models.TextField(blank=True, null=True, verbose_name='Месторасположение объекта (индекс, адрес, ориентир)')),
                ('name_building', models.TextField(blank=True, null=True, verbose_name='Наименование объекта')),
                ('category_object', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('legal_opf', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('legal_opf_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('tin', models.CharField(blank=True, max_length=200, null=True, verbose_name='INN')),
                ('passport_number', models.TextField(blank=True, null=True, verbose_name='Серия и номер паспорта')),
                ('user_type_real', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('legal_entity_tin', models.TextField(blank=True, null=True, verbose_name='ИНН юридического лица')),
                ('objects_stateprog', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('deskript', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('requisites', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('amount', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Nomi')),
                ('which_geo', models.CharField(blank=True, default='0', max_length=10, null=True, verbose_name='Which Geo')),
            ],
            options={
                'verbose_name': 'Qurilish-montaj ishlari',
                'verbose_name_plural': 'Qurilish-montaj ishlarini amalga oshirish reestri',
            },
        ),
        migrations.CreateModel(
            name='Soata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hudud_kodi', models.IntegerField(blank=True, null=True)),
                ('tuman_sh_kodi', models.IntegerField(blank=True, null=True)),
                ('hudud_nomi', models.CharField(blank=True, max_length=200, null=True, verbose_name='Hudud nomi')),
                ('tuman_sh_nomi', models.CharField(blank=True, max_length=200, null=True, verbose_name='Hudud nomi')),
            ],
            options={
                'verbose_name_plural': 'Soata',
            },
        ),
        migrations.CreateModel(
            name='Sub_apot',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nomi', models.CharField(max_length=255)),
                ('public_private', models.CharField(choices=[('1', 'Ochiq'), ('2', 'Maxfiy')], default='2', max_length=10, verbose_name='Ochiq yoki maxfiy')),
                ('zindex', models.IntegerField(blank=True, null=True)),
                ('file_type', models.CharField(choices=[('1', 'Yuklab olinadigan'), ('2', "Ko'rish uchun")], max_length=10, verbose_name='file_type')),
            ],
            options={
                'verbose_name_plural': 'Sub_apot',
                'ordering': ['zindex'],
            },
        ),
        migrations.CreateModel(
            name='Sub_genplan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nomi', models.CharField(max_length=255)),
                ('zindex', models.IntegerField(blank=True, null=True)),
                ('public_private', models.CharField(choices=[('1', 'Umumiy ochiq'), ('2', 'Faqat geotif ochiq'), ('3', 'Faqat pdf ochiq'), ('4', 'Maxfiy')], default='2', max_length=10, verbose_name='Ochiq yoki maxfiy')),
            ],
            options={
                'verbose_name_plural': 'sub_genplan',
                'ordering': ['zindex'],
            },
        ),
        migrations.CreateModel(
            name='Sub_genplan_data',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('layer_name', models.CharField(max_length=255)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('geotif', models.FileField(default='', upload_to='genplan_data/geotifs/')),
                ('pdf', models.FileField(default='', upload_to='genplan_data/pdfs/')),
                ('genplan_id', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, to='proj.Genplans')),
                ('sub_genplan_id', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, to='proj.Sub_genplan')),
            ],
            options={
                'verbose_name_plural': 'Sub_genplan_data',
            },
        ),
        migrations.CreateModel(
            name='Sub_genplan_data_edit',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('layer_name', models.CharField(max_length=255)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('geotif', models.FileField(default='', upload_to='genplan_data/geotifs/')),
                ('pdf', models.FileField(default='', upload_to='genplan_data/pdfs/')),
                ('genplan_id', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, to='proj.Genplans_edit')),
                ('sub_genplan_id', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, to='proj.Sub_genplan')),
            ],
            options={
                'verbose_name_plural': 'Sub_genplan_data_edit',
            },
        ),
        migrations.CreateModel(
            name='Sub_pdp',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nomi', models.CharField(max_length=255)),
                ('zindex', models.IntegerField(blank=True, null=True)),
                ('public_private', models.CharField(choices=[('1', 'Umumiy ochiq'), ('2', 'Faqat geotif ochiq'), ('3', 'Faqat pdf ochiq'), ('4', 'Maxfiy')], default='4', max_length=10, verbose_name='Ochiq yoki maxfiy')),
            ],
            options={
                'verbose_name_plural': 'sub_pdp',
                'ordering': ['zindex'],
            },
        ),
        migrations.CreateModel(
            name='Sub_pdp_data',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('layer_name', models.CharField(max_length=255)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('geotif', models.FileField(default='', upload_to='pdp_data/geotifs/')),
                ('pdf', models.FileField(default='', upload_to='pdp_data/pdfs/')),
                ('pdp_id', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, to='proj.Pdps')),
                ('sub_pdp_id', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, to='proj.Sub_pdp')),
            ],
            options={
                'verbose_name_plural': 'Sub_pdp_data',
            },
        ),
        migrations.CreateModel(
            name='Sub_pdp_data_edit',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('layer_name', models.CharField(max_length=255)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('geotif', models.FileField(default='', upload_to='pdp_data/geotifs/')),
                ('pdf', models.FileField(default='', upload_to='pdp_data/pdfs/')),
                ('pdp_id', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, to='proj.Pdps_edit')),
                ('sub_pdp_id', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, to='proj.Sub_pdp')),
            ],
            options={
                'verbose_name_plural': 'Sub_pdp_data_edit',
            },
        ),
        migrations.CreateModel(
            name='Sub_sub_genplan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nomi', models.CharField(max_length=255)),
                ('zindex', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'sub_sub_genplan',
                'ordering': ['zindex'],
            },
        ),
        migrations.CreateModel(
            name='Sub_sub_pdp',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nomi', models.CharField(max_length=255)),
                ('zindex', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'sub_sub_pdp',
                'ordering': ['zindex'],
            },
        ),
        migrations.CreateModel(
            name='Tip_documents',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tip_dis', models.CharField(blank=True, max_length=200, verbose_name='Hujjatlar guruhining nomi')),
            ],
            options={
                'verbose_name_plural': 'Hujjatlar guruhi',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=250, verbose_name='Full name')),
                ('email', models.EmailField(blank=True, max_length=250, verbose_name='email')),
                ('contact', models.CharField(blank=True, max_length=250, verbose_name='contact')),
                ('login', models.CharField(default='uz_', max_length=40)),
                ('password', models.CharField(max_length=40)),
                ('active_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Viloyat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vil_id', models.IntegerField(blank=True, null=True)),
                ('disUz', models.CharField(blank=True, max_length=70, verbose_name='Nomi Uzb')),
                ('disRu', models.CharField(blank=True, max_length=70, verbose_name='Nomi Rus')),
                ('color_chart', models.CharField(blank=True, max_length=70, verbose_name='color_chart')),
                ('shortUz', models.CharField(blank=True, max_length=70, verbose_name='short_uz')),
                ('shortRu', models.CharField(blank=True, max_length=70, verbose_name='short_Ru')),
            ],
            options={
                'verbose_name_plural': 'Viloyat',
            },
        ),
        migrations.CreateModel(
            name='Tuman',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomi', models.CharField(max_length=70, verbose_name='Nomi')),
                ('disUz', models.CharField(blank=True, max_length=70, verbose_name='Nomi Uzb')),
                ('disRu', models.CharField(blank=True, max_length=70, verbose_name='Nomi Rus')),
                ('viloyat', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, to='proj.Viloyat')),
            ],
            options={
                'verbose_name_plural': 'Tuman',
            },
        ),
        migrations.CreateModel(
            name='Sub_tip_documents',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sub_tip_dis', models.CharField(blank=True, max_length=200, verbose_name='Hujjat turi')),
                ('tip_doc', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, to='proj.Tip_documents', verbose_name='Hujjatlar guruhi nomi')),
            ],
            options={
                'verbose_name_plural': 'Hujjat turi',
            },
        ),
        migrations.CreateModel(
            name='Sub_sub_pdp_data_edit',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('file', models.FileField(default='', upload_to='pdp_data/data/')),
                ('Sub_pdp_data_id', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, to='proj.Sub_pdp_data_edit')),
                ('sub_sub_pdp_id', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, to='proj.Sub_sub_pdp')),
            ],
            options={
                'verbose_name_plural': 'Sub_sub_pdp_data_edit',
            },
        ),
        migrations.CreateModel(
            name='Sub_sub_pdp_data',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('file', models.FileField(default='', upload_to='pdp_data/data/')),
                ('Sub_pdp_data_id', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, to='proj.Sub_pdp_data')),
                ('sub_sub_pdp_id', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, to='proj.Sub_sub_pdp')),
            ],
            options={
                'verbose_name_plural': 'Sub_sub_pdp_data',
            },
        ),
        migrations.CreateModel(
            name='Sub_sub_genplan_data_edit',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('file', models.FileField(default='', upload_to='genplan_data/data/')),
                ('Sub_genplan_data_id', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, to='proj.Sub_genplan_data_edit')),
                ('sub_sub_genplan_id', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, to='proj.Sub_sub_genplan')),
            ],
            options={
                'verbose_name_plural': 'Sub_sub_genplan_data_edit',
            },
        ),
        migrations.CreateModel(
            name='Sub_sub_genplan_data',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('file', models.FileField(default='', upload_to='genplan_data/data/')),
                ('Sub_genplan_data_id', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, to='proj.Sub_genplan_data')),
                ('sub_sub_genplan_id', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, to='proj.Sub_sub_genplan')),
            ],
            options={
                'verbose_name_plural': 'Sub_sub_genplan_data',
            },
        ),
        migrations.CreateModel(
            name='Sub_apot_data_edit',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('file', models.FileField(default='', upload_to='apot_data/data/')),
                ('apot_id', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, to='proj.Apots_edit')),
                ('sub_apot_id', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, to='proj.Sub_apot')),
            ],
            options={
                'verbose_name_plural': 'Sub_apot_data_edit',
            },
        ),
        migrations.CreateModel(
            name='Sub_apot_data',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('file', models.FileField(default='', upload_to='apot_data/data/')),
                ('apot_id', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, to='proj.Apots')),
                ('sub_apot_id', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, to='proj.Sub_apot')),
            ],
            options={
                'verbose_name_plural': 'Sub_apot_data',
            },
        ),
        migrations.CreateModel(
            name='Redlines_edit',
            fields=[
                ('obj_id', models.AutoField(primary_key=True, serialize=False)),
                ('vil_id', models.IntegerField(blank=True, default=0, null=True)),
                ('nomi', models.CharField(blank=True, max_length=255, null=True)),
                ('id', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
                ('genplan_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='proj.Genplans')),
                ('redline_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='proj.Redlines')),
            ],
            options={
                'verbose_name_plural': 'Qizil chiziqlar edit',
                'db_table': 'redlines_edit',
            },
        ),
        migrations.CreateModel(
            name='GeologRayon_edit',
            fields=[
                ('ojb_id', models.AutoField(primary_key=True, serialize=False)),
                ('vil_id', models.IntegerField(blank=True, default=0, null=True)),
                ('injenerlik_geologik_viloyat_indeksi', models.CharField(blank=True, max_length=255, null=True)),
                ('injenerlik_geologik_viloyat_tavsifi', models.TextField(blank=True, null=True)),
                ('injenerlik_geologik_hududlar_indeksi', models.CharField(blank=True, max_length=255, null=True)),
                ('injenerlik_geologik_hududlar_tavsifi', models.TextField(blank=True, null=True)),
                ('injenerlik_geologik_kichik_hududlar_indeksi', models.CharField(blank=True, max_length=255, null=True)),
                ('injenerlik_geologik_kichik_hududlar_tavsifi', models.TextField(blank=True, null=True)),
                ('injenerlik_geologik_uchastkalar_indeksi', models.CharField(blank=True, max_length=255, null=True)),
                ('injenerlik_geologik_uchastkalar_tavsifi', models.TextField(blank=True, null=True)),
                ('hududlarning_geologik_genetik_tavsifi', models.TextField(blank=True, null=True)),
                ('hududdagi_geodinamik_jarayonlar', models.TextField(blank=True, null=True)),
                ('tavsiya_etiladigan_injenerlik_tadbirlari', models.TextField(blank=True, null=True)),
                ('gruntlarning_seysmik_xususiyatlari_buyicha_toifasi', models.CharField(blank=True, max_length=255, null=True)),
                ('kod', models.CharField(blank=True, max_length=50, null=True)),
                ('id', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('geolograyon_data_edit_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='proj.GeologRayon_data_edit')),
                ('geolograyon_data_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='proj.GeologRayon_data')),
                ('geolograyon_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='proj.GeologRayon')),
            ],
            options={
                'verbose_name_plural': 'Geologik rayonlashtirish polygon edit',
                'db_table': 'geolograyon_edit',
            },
        ),
        migrations.AddField(
            model_name='geolograyon',
            name='geolograyon_data_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='proj.GeologRayon_data'),
        ),
        migrations.CreateModel(
            name='FunkGenplans_edit',
            fields=[
                ('obj_id', models.AutoField(primary_key=True, serialize=False)),
                ('vil_id', models.IntegerField(blank=True, default=0, null=True)),
                ('zonalarning_nomi', models.CharField(blank=True, max_length=200, null=True)),
                ('funktsional_zonalarning_maydoni_ga', models.CharField(blank=True, max_length=50, null=True)),
                ('mavjud_imoratlarning_tavsifi_asosan', models.TextField(blank=True, null=True)),
                ('shaharsozlik_faoliyatining_ruxsat_berilgan_turi', models.TextField(blank=True, null=True)),
                ('shaharsozlik_faoliyatining_taqiqlangan_turi', models.TextField(blank=True, null=True)),
                ('shaharsozlik_faoliyatining_muayyan_shartlarni_bajargan_holda_ru', models.TextField(blank=True, null=True)),
                ('type', models.SmallIntegerField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('funk_zone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='proj.FunkZones')),
                ('funkgenplan_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='proj.FunkGenplans')),
                ('genplan_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='proj.Genplans')),
            ],
            options={
                'verbose_name_plural': "Bosh rejalar bo'yicha funksioan zonalar edit",
                'db_table': 'funkgenplans_edit',
            },
        ),
        migrations.AddField(
            model_name='funkgenplans',
            name='funk_zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='proj.FunkZones'),
        ),
        migrations.AddField(
            model_name='funkgenplans',
            name='genplan_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='proj.Genplans'),
        ),
        migrations.CreateModel(
            name='FunkApots_edit',
            fields=[
                ('obj_id', models.AutoField(primary_key=True, serialize=False)),
                ('vil_id', models.IntegerField(blank=True, default=0, null=True)),
                ('zonalarning_nomi', models.CharField(blank=True, max_length=200, null=True)),
                ('funktsional_zonalarning_maydoni_ga', models.CharField(blank=True, max_length=50, null=True)),
                ('mavjud_imoratlarning_tavsifi_asosan', models.TextField(blank=True, null=True)),
                ('shaharsozlik_faoliyatining_ruxsat_berilgan_turi', models.TextField(blank=True, null=True)),
                ('shaharsozlik_faoliyatining_taqiqlangan_turi', models.TextField(blank=True, null=True)),
                ('shaharsozlik_faoliyatining_muayyan_shartlarni_bajargan_holda_ru', models.TextField(blank=True, null=True)),
                ('type', models.SmallIntegerField(blank=True, null=True)),
                ('id', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('apot_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='proj.Apots')),
                ('funk_zone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='proj.FunkZones')),
                ('funkapot_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='proj.FunkApots')),
            ],
            options={
                'verbose_name_plural': "APOT bo'yicha funksioan zonalar edit",
                'db_table': 'funkapots_edit',
            },
        ),
        migrations.AddField(
            model_name='funkapots',
            name='funk_zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='proj.FunkZones'),
        ),
        migrations.CreateModel(
            name='Documents',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nomer_doc', models.CharField(blank=True, max_length=70, verbose_name='Hujjat raqami')),
                ('data', models.DateField(blank=True, default=datetime.datetime.today, verbose_name='Qabul qilingan sana')),
                ('file_doc', models.FileField(blank=True, upload_to='proj/docs_for_pod9', verbose_name='Hujjat fayli')),
                ('doc_nomi', models.CharField(blank=True, max_length=255, verbose_name='Hujjat nomi')),
                ('link_doc', models.CharField(blank=True, max_length=255, verbose_name='Hujjat havolasi')),
                ('sub_tip_doc', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='proj.Sub_tip_documents', verbose_name='Hujjat turi')),
                ('tip_doc', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, to='proj.Tip_documents', verbose_name='Hujjatlar guruhi nomi')),
            ],
            options={
                'verbose_name_plural': 'Barcha hujjatlar',
            },
        ),
    ]
